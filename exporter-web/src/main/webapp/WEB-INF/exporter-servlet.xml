<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

  <tx:annotation-driven/>
  <context:component-scan base-package="org.springframework.data.services.web.exporter"/>

  <!-- Generic utilities used throughout -->
  <bean id="baseUri" class="java.net.URI">
    <constructor-arg value="http://localhost:8080/data"/>
  </bean>
  <bean id="conversionService" class="org.springframework.core.convert.support.DefaultConversionService"/>
  <bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
    <property name="transactionManager" ref="transactionManager"/>
  </bean>
  <bean id="httpMessageConverters" class="java.util.ArrayList">
    <constructor-arg>
      <list>
        <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
          <property name="supportedMediaTypes">
            <list>
              <value>application/json</value>
              <value>application/x-spring-data+json</value>
            </list>
          </property>
        </bean>
        <bean class="org.springframework.http.converter.feed.AtomFeedHttpMessageConverter">
          <property name="supportedMediaTypes">
            <list>
              <value>application/xml+atom</value>
              <value>application/x-spring-data+atom</value>
            </list>
          </property>
        </bean>
        <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter">
          <property name="supportedMediaTypes">
            <list>
              <value>application/xml</value>
              <value>application/x-spring-data+xml</value>
            </list>
          </property>
        </bean>
        <bean class="org.springframework.http.converter.StringHttpMessageConverter">
          <property name="supportedMediaTypes">
            <list>
              <value>text/plain</value>
              <value>text/uri-list</value>
            </list>
          </property>
        </bean>
      </list>
    </constructor-arg>
  </bean>

  <!-- Metadata for JPA Repositories -->
  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
  <bean id="jpaRepositoryMetadata" class="org.springframework.data.services.repository.jpa.JpaRepositoryMetadata">
    <property name="repositories">
      <list>
        <!--ref bean="addressRepository"/-->
        <ref bean="personRepository"/>
        <ref bean="profileRepository"/>
      </list>
    </property>
  </bean>

  <!-- The Exporter
  <bean class="org.springframework.data.services.web.exporter.RepositoryExporterController">
    <property name="baseUri" ref="baseUri"/>
    <property name="repositoryMetadata" ref="jpaRepositoryMetadata"/>
  </bean>
   -->

  <!-- Handle rendering in different representations -->
  <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <property name="mediaTypes">
      <map>
        <entry key="json" value="application/x-spring-data+json"/>
        <entry key="uri-list" value="test/uri-list"/>
      </map>
    </property>
    <property name="defaultViews">
      <list>
        <bean class="org.springframework.data.services.web.JsonView">
          <constructor-arg value="application/x-spring-data+json"/>
        </bean>
        <bean class="org.springframework.data.services.web.UriListView"/>
      </list>
    </property>
  </bean>

  <!-- Spring MVC >=3.1 -->
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>
  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    <property name="customArgumentResolvers">
      <list>
        <bean class="org.springframework.data.services.web.exporter.ServerHttpRequestMethodArgumentResolver"/>
      </list>
    </property>
  </bean>
  <bean class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver"/>
  <bean class="org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver"/>
  <bean class="org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver"/>

</beans>